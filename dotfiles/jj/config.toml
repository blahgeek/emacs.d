"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "Yikai Zhao"
email = "yikai@z1k.dev"

[ui]
default-command = ["log", "--limit=10"]
diff-editor = "magit-as-diff-tool"
diff-formatter = ":git"
conflict-marker-style = "git"

[templates]
git_push_bookmark = '"yikai/jj-" ++ change_id.short()'
draft_commit_description = '''
concat(
  builtin_draft_commit_description,
  "\nJJ: ignore-rest\n",
  diff.git(),
)
'''

[git]
private-commits = "description(glob:'debug:*') | description(glob:'private:*') | description(glob:'tmp:*')"

[aliases]
push = ["git", "push"]
fetch = ["git", "fetch"]

tug = ["util", "exec", "--", "bash", "-c", '''
jj bookmark move --from "heads(::@- & bookmarks())" --to "${1:-@-}"
''', "argv0"]

pre-commit = ["util", "exec", "--", "bash", "-c", '''
jj diff -r ${1:-@} --name-only --no-pager | xargs pre-commit run --files
''', "argv0"]

push-mr = ["util", "exec", "--", "bash", "-c", '''
set -ex

REVS="$1"

jj log -r "$REVS"
read -rp "Continue? [y/N] " ans && [[ ${ans,,} == y* ]] || exit 1

ROOT_CHANGE_ID="$(jj log --no-graph -r "roots($REVS)" -T 'change_id.short()')"
SOURCE_BRANCH="yikai/jj-mr-$ROOT_CHANGE_ID"
jj bookmark set --allow-backwards -r "heads($REVS)" "$SOURCE_BRANCH"
jj git push -N -b "$SOURCE_BRANCH"

TARGET_BRANCH="$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"
TMP_TARGET_BRANCH="tmp-mr-target/yikai-jj-$ROOT_CHANGE_ID"
jj bookmark delete "$TMP_TARGET_BRANCH" 2> /dev/null || true
if [[ "$(jj log --no-graph -r "::trunk() & $ROOT_CHANGE_ID-")" == "" ]]; then
  echo "Target commit ($ROOT_CHANGE_ID-) is not on trunk()"
  TARGET_BRANCH="$TMP_TARGET_BRANCH"
  jj bookmark set --allow-backwards -r "$ROOT_CHANGE_ID-" "$TARGET_BRANCH"
  jj git push -N -b "$TARGET_BRANCH"
fi

MR_ID="$(glab mr list -s "$SOURCE_BRANCH" -F json | jq '.[0].iid')"
if [[ "$MR_ID" == "null" ]]; then
    glab mr create -s "$SOURCE_BRANCH" -b "$TARGET_BRANCH" \
        --remove-source-branch --squash-before-merge  \
        --title "$(jj log --no-graph -r "$ROOT_CHANGE_ID" -T 'description.first_line()')" \
        --description "$(jj log --no-graph -r "$ROOT_CHANGE_ID" -T 'description.remove_prefix(description.first_line()).trim_start()')"
else
    glab mr update "$MR_ID" --target-branch "$TARGET_BRANCH"
fi

''', "argv0"]
